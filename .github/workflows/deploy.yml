name: "Pull requests build"

on:
    push:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: 'temurin'
                    java-version: 17
                    architecture: x64

            -   name: Cache Maven packages
                uses: actions/cache@v3.3.1
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-

            -   name: Build with Maven
                run: mvn --no-transfer-progress verify

            -   uses: actions/upload-artifact@master
                with:
                    name: target
                    path: target/
    
    docker-build-push:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3

            -   uses: actions/download-artifact@master
                with:
                    name: target
                    path: target/

            -   name: "Set up QEMU"
                uses: docker/setup-qemu-action@v2.2.0

            -   name: "Set up Docker Buildx"
                uses: docker/setup-buildx-action@v3

            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                  username: ${{ secrets.DOCKERHUB_USERNAME_ID }}
                  password: ${{ secrets.DOCKERHUB_TOKEN_KEY }}
        
            -   name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: ${{ secrets.DOCKERHUB_REPOSITORY }}
                    
    zap_scan:
        needs: [build,docker-build-push]
        runs-on: ubuntu-latest
        name: Scan the web application
        steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: main
        - name: ZAP Scan
          uses: zaproxy/action-full-scan@v0.8.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
            target: 'https://www.zaproxy.org/'
            rules_file_name: '.zap/rules.tsv'
            cmd_options: '-a'
