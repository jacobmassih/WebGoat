name: "Pull requests build"

on:
    push:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
env:
    # verbosity setting for Terraform logs
    TF_LOG: INFO
    # Credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: 'temurin'
                    java-version: 17
                    architecture: x64

            -   name: Cache Maven packages
                uses: actions/cache@v3.3.1
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-

            -   name: Build with Maven
                run: mvn --no-transfer-progress verify

            -   uses: actions/upload-artifact@master
                with:
                    name: target
                    path: target/
    
    docker-build-push:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3

            -   uses: actions/download-artifact@master
                with:
                    name: target
                    path: target/

            -   name: "Set up QEMU"
                uses: docker/setup-qemu-action@v2.2.0

            -   name: "Set up Docker Buildx"
                uses: docker/setup-buildx-action@v3

            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                  username: ${{ secrets.DOCKERHUB_USERNAME_ID }}
                  password: ${{ secrets.DOCKERHUB_TOKEN_KEY }}
        
            -   name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: ${{ secrets.DOCKERHUB_REPOSITORY }}

    lint_terraform:
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout code
            uses: actions/checkout@v2
            
        -   name: Set up Terraform
            uses: hashicorp/setup-terraform@v1

        -   name: Install TFLint
            run: |
                wget https://github.com/terraform-linters/tflint/releases/download/v0.29.1/tflint_linux_amd64.zip
                unzip tflint_linux_amd64.zip
                sudo mv tflint /usr/local/bin/tflint
                tflint --version
        -   name: Install Terrascan
            run: |
                wget https://github.com/accurics/terrascan/releases/download/v1.13.1/terrascan_1.13.1_Linux_x86_64.tar.gz
                tar -xzf terrascan_1.13.1_Linux_x86_64.tar.gz
                sudo mv terrascan /usr/local/bin/

        -   name: Install Checkov
            run: pip install checkov

        -   name: Run TFLint
            run: tflint ./terraform
        
        -   name: Format Terraform code
            run: terraform fmt -recursive
    
        -   name: Run Terrascan
            continue-on-error: true
            run: terrascan scan -d ./terraform

        -   name: Run Checkov
            continue-on-error: true
            run: checkov --directory=./terraform

    build_infrastructure:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: terraform/
            
        steps:
        -   name: Checkout code
            uses: actions/checkout@v2       
    
        -   name: Setup Terraform with specified version on the runner
            uses: hashicorp/setup-terraform@v2
            with:
                terraform_version: 1.3.0
        
        -   name: Terraform init
            id: init
            run: terraform init
    
        -   name: Terraform format
            id: fmt
            run: terraform fmt -check
        
        -   name: Terraform validate
            id: validate
            run: terraform validate
    
        -   name: Terraform plan
            id: plan
            run: terraform plan -no-color -input=false
            continue-on-error: true
    
        -   name: Terraform Plan Status
            if: steps.plan.outcome == 'failure'
            run: exit 1
    
        -   name: Terraform Apply
            run: terraform apply -auto-approve -input=false
            
        # -   name: Set up Terraform
        #     uses: hashicorp/setup-terraform@v1

        # -   name: Install Ansible
        #     run: |
        #         sudo apt-get update
        #         sudo apt-get install -y ansible

        # -   name: Configure AWS credentials
        #     run: |
        #       echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        #       echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            
        # -   name: Initialize Terraform
        #     run: terraform init        

        # -   name: Apply Terraform Changes
        #     run: terraform apply -auto-approve


